This is a doctest based regression suite for 7-base_geometry.txt

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("my_int")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("my_int", 89)

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> bg.integer_validator("number", -12)
Traceback (most recent call last):
...
ValueError: number must be greater than 0

>>> bg.integer_validator("age", [2])
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", True)
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", "4")
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", (3,))
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: age must be an integer
